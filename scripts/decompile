#!/usr/bin/env bash

# get scripts base regardless of execution location
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
scriptsBase="$(dirname "$SOURCE")"
. "$scriptsBase/init"

previousVersion="1.6.1"
currentVersion="1.7.0"

extractClassOutput="$quiltFlower/classes"
srcOutput="$quiltFlower/minecraft/src/main/"
classOutput="$srcOutput/java"
resourcesOutput="$srcOutput/resources"

jar="$quiltFlower/Server-${VERSION}.jar"
previousDecompiler="$quiltFlower/quiltFlower-$previousVersion.jar"
decompiler="$quiltFlower/quiltFlower-$currentVersion.jar"

downloadURL="https://github.com/QuiltMC/quiltflower/releases/download/$currentVersion/quiltflower-$currentVersion.jar"

(

	mkdir -p "$extractClassOutput"
	mkdir -p "$classOutput"
	mkdir -p "$resourcesOutput"
	
		
	echo ""
	echo "Extracting NMS classes..."
		delete "$extractClassOutput" "mkdir"
		cd "$extractClassOutput"
		
		jar xf "$jar" net/minecraft com/mojang/math
		
		if [ "$?" != "0" ]; then
			cd "$basedir"
			echo "  Failed to extract NMS classes."
			exit 1
		fi

	echo "  Extracting assets and data..."
		delete "$resourcesOutput" "mkdir"
		cd "$resourcesOutput"
		
		jar xf "$jar" data assets log4j2.xml Log4j-levels.xsd pack.mcmeta version.json
		
		if [ "$?" != "0" ]; then
			cd "$basedir"
			echo "  Failed to extract assets and data."
			exit 1
		fi
	
	echo "  Decompiling classes..."
	echo ""
		cd "$basedir"
		delete "$previousDecompiler"
		wget -cO - $downloadURL > "$decompiler"
		java -jar "$decompiler" -dgs=1 -rsy=1 -hdc=0 -asc=1 -rsy=1 -aoa=1 -jvn=1 -ind='    ' --legacy-saving "$extractClassOutput" "$classOutput"
		
		if [ "$?" != "0" ]; then
			echo "  Failed to decompile classes."
			exit 1
		fi

) || exit 1